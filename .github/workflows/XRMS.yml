name: Build, Push to Docker Hub & Deploy to EC2

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_REPO: 563568/xrms-01
  EC2_APP_PORT: 8081
  EC2_HOST_PORT: 8080
  EC2_CONTAINER_NAME: XRMS

jobs:
  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push image to Docker Hub
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          docker build -t $DOCKERHUB_REPO:$IMAGE_TAG .

          echo "Tagging image as 'latest'..."
          docker tag $DOCKERHUB_REPO:$IMAGE_TAG $DOCKERHUB_REPO:latest

          echo "Pushing Docker images..."
          docker push $DOCKERHUB_REPO:$IMAGE_TAG
          docker push $DOCKERHUB_REPO:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Logging into Docker on EC2..."
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            IMAGE_URI="${{ env.DOCKERHUB_REPO }}:latest"

            echo "Stopping and removing existing container (if any)..."
            docker stop $EC2_CONTAINER_NAME || true
            docker rm $EC2_CONTAINER_NAME || true

            echo "Pulling latest image..."
            docker pull $IMAGE_URI

            echo "Running new container..."
            docker run -d \
              --name $EC2_CONTAINER_NAME \
              -p $EC2_HOST_PORT:$EC2_APP_PORT \
              --restart always \
              $IMAGE_URI

            echo "Waiting for container to start..."
            sleep 5

            echo "Container status:"
            docker ps -a | grep $EC2_CONTAINER_NAME

            echo "Recent logs:"
            docker logs --tail 50 $EC2_CONTAINER_NAME

            echo "Cleaning up unused images..."
            docker image prune -f
