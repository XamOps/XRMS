name: Build and Deploy to Remote Server

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_REPO: akshay172/xrms
  EC2_APP_PORT: 3000
  EC2_HOST_PORT: 80
  EC2_CONTAINER_NAME: myhrms_on_ec2

jobs:
  deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Cache Docker layers to speed up builds
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.DOCKERHUB_REPO }}:latest

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add remote host to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      env:
        REMOTE_HOST: ${{ secrets.EC2_HOST }}

    - name: Run SSH command on remote server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Running deployment script on remote server..."
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          IMAGE_URI="${{ env.DOCKERHUB_REPO }}:latest"
          echo "Image URI to pull: ${IMAGE_URI}"
          docker pull $IMAGE_URI
          docker stop ${{ env.EC2_CONTAINER_NAME }} || true
          docker rm ${{ env.EC2_CONTAINER_NAME }} || true
          docker run -d \
            --name ${{ env.EC2_CONTAINER_NAME }} \
            -p ${{ env.EC2_HOST_PORT }}:${{ env.EC2_APP_PORT }} \
            --restart always \
            $IMAGE_URI
          echo "Deployment commands finished."
