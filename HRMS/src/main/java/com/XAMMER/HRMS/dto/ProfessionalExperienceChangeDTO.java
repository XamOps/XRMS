package com.XAMMER.HRMS.dto;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties; // Import for ignoring unknown properties

@JsonIgnoreProperties(ignoreUnknown = true) // Ignores any properties received from frontend not defined in this DTO
public class ProfessionalExperienceChangeDTO {

    // Enum to represent the type of operation (Create, Update, Delete)
    public enum Operation {
        CREATE, UPDATE, DELETE
    }

    private Operation operation; // The type of change (e.g., CREATE, UPDATE, DELETE)
    private String id;           // The actual database ID (for UPDATE/DELETE) or a temporary ID (for CREATE)
    private String tempId;       // A temporary ID used by the frontend for new entries, especially for file linking
    private ProfessionalExperienceDTO data; // The actual data of the professional experience record

    // --- Constructors ---
    public ProfessionalExperienceChangeDTO() {} // No-argument constructor is needed for Jackson deserialization

    // --- Getters and Setters (explicitly written for clarity, or can be generated by Lombok) ---
    public Operation getOperation() { return operation; }
    public void setOperation(Operation operation) { this.operation = operation; }
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    public String getTempId() { return tempId; }
    public void setTempId(String tempId) { this.tempId = tempId; }
    public ProfessionalExperienceDTO getData() { return data; }
    public void setData(ProfessionalExperienceDTO data) { this.data = data; }

    @Override
    public String toString() {
        return "ProfessionalExperienceChangeDTO{" +
                "operation=" + operation +
                ", id='" + id + '\'' +
                ", tempId='" + tempId + '\'' +
                ", data=" + data +
                '}';
    }
}